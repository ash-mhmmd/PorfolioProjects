/*

COVID-19 Data Exploration Project

Project inspired by AlexTheAnalyst (Youtube)
Data Source: https://ourworldindata.org/covid-deaths

Skills Used:Joins, CTEs, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types

*/

-- CHECKING DATA

SELECT *
FROM ExplorationProject.dbo.CovidDeaths;

SELECT *
FROM ExplorationProject.dbo.CovidVaccinations$;



-- DAILY LIKELIHOOD OF DYING FROM COVID BY COUNTRY

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as LikelihoodOfDeath
FROM CovidDeaths
WHERE continent is not null
ORDER BY 1,2;



-- DAILY LIKELIHOOD OF DYING FROM COVID BY CONTINENT

SELECT continent, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as LikelihoodOfDeath
FROM CovidDeaths
WHERE continent is not null
ORDER BY 1,2;



-- DAILY INFECTION RATE BY COUNTRY

SELECT location, date, population, total_cases, (total_cases/population)*100 as InfectionRate
FROM CovidDeaths
ORDER BY 1,2;



-- DAILY INFECTION RATE BY CONTINENT

SELECT continent, date, population, total_cases, (total_cases/population)*100 as InfectionRate
FROM CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1,2;



-- HIGHEST INFECTION RATES BY COUNTRY

SELECT Location, max(total_cases) as HighestInfectionCount, max((total_cases/population))*100 as CountryInfectionRate
FROM CovidDeaths
GROUP BY location
ORDER BY CountryInfectionRate desc;



-- HIGHEST INFECTION RATES BY CONTINENT

SELECT Continent, max(total_cases) as HighestInfectionCount, max((total_cases/population))*100 as CountryInfectionRate
FROM CovidDeaths
WHERE Continent IS NOT NULL
GROUP BY Continent
ORDER BY CountryInfectionRate desc;



-- DEATH COUNT BY COUNTRY

SELECT Location, max(cast(total_deaths as int)) as CountryDeathCount
FROM CovidDeaths
WHERE continent is not null
GROUP BY location
ORDER BY CountryDeathCount desc;



-- DEATH COUNT BY CONTINENT

SELECT Continent, max(cast(total_deaths as int)) as ContinentDeathCount
FROM CovidDeaths
WHERE continent is not null
GROUP BY continent
ORDER BY ContinentDeathCount desc;



-- GLOBAL DEATH RATE

SELECT sum(new_cases) as GlobalCases, sum(cast(new_deaths as int)) as GlobalDeaths, sum(cast(new_deaths as int))/sum(new_cases)*100 as GlobalDeathRate
FROM CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 1,2;



-- ROLLING COUNT OF GLOBAL POPULATION THATâ€™S RECEIVED AT LEAST ONE COVID VACCINE

SELECT dea.Continent, dea.Location, dea.Date, dea.Population, vac.New_Vaccinations, 
SUM(cast(vac.new_vaccinations as bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingVaccinations
FROM CovidDeaths dea
JOIN CovidVaccinations$ vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2,3;



-- ROLLING PERCENT OF GLOBAL POPULATION THAT'S RECEIVED AT LEAST ONE VACCINE
	-- Using CTE to divide 'RollingVaccinations' by 'Population'
	-- PopvsVac = Population vs Vaccinations
	
WITH PopvsVac (Continent, Location, Date, Population,New_Vaccinations, RollingVaccinations)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population,vac.new_vaccinations, SUM(CONVERT(bigint, vac.new_vaccinations)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingVaccinations
FROM CovidDeaths dea
JOIN CovidVaccinations$ vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
)
SELECT *, (RollingVaccinations/population)*100 as RollingVaccinationsPercent
FROM PopvsVac;



-- ROLLING PERCENT OF GLOBAL POPULATION THAT'S RECEIVED AT LEAST ONE VACCINE
	-- Using TEMP TABLE to divide 'RollingVaccinations' by 'Population'
	-- PopvsVac = Population vs Vaccinations
	
DROP Table if exists #GlobalVaccinationsPercent
CREATE TABLE #GlobalVaccinationsPercent
(
Continent nvarchar(255),
Location nvarchar (255),
Date datetime,
Population numeric,
New_Vaccinations numeric,
RollingVaccinations numeric,
)
INSERT INTO #GlobalVaccinationsPercent
SELECT dea.Continent, dea.Location, dea.Date, dea.Population, vac.New_Vaccinations, 
SUM(cast(vac.new_vaccinations as bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingVaccinations
FROM CovidDeaths dea
JOIN CovidVaccinations$ vac
	ON dea.location = vac.location
	AND dea.date = vac.date

SELECT *, (RollingVaccinations/Population)*100  as RollingVaccinationsPercent
FROM #GlobalVaccinationsPercent;



-- CREATING VIEWS TO STORE DATA FOR LATER VISUALS
CREATE VIEW GlobalVaccinationsPercent as
SELECT dea.Continent, dea.Location, dea.Date, dea.Population, vac.New_Vaccinations, 
SUM(cast(vac.new_vaccinations as bigint)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) as RollingVaccinations
FROM CovidDeaths dea
JOIN CovidVaccinations$ vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
